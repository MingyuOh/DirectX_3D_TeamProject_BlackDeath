#pragma once
//씬
//===============================================================================
//=====================================SCENE=====================================
//===============================================================================
enum SCENE
{
	MAIN = 0,
	LOADING,
	INGAME
};
//===============================================================================
//=====================================MAIN======================================
//===============================================================================
//MAIN씬 버튼
enum MAIN_BUTTON
{
	MAIN_BUTTON_GAMEPLAY = 0,
	MAIN_BUTTON_HOWTOPLAY,
	MAIN_BUTTON_OPTION,
	MAIN_BUTTON_CREADIT,
	MAIN_BUTTON_EXIT
};
//============FSM===============
//MAIN씬 상태
enum MAIN_STATE
{
	MAIN_STATE_NONE = 0,			//프리상태
	MAIN_STATE_GAMEPLAY_SCENE_ON,	//메인씬의 게임플레이 온
	MAIN_STATE_HOWTOPLAY_PANEL_ON,	//메인씬의 게임방법 패널 온
	MAIN_STATE_OPTION_PANEL_ON,		//메인씬의 옵션 패널 온
	MAIN_STATE_CREADIT_PANEL_ON,	//메인씬의 정보 패널 온
	MAIN_STATE_EXIT_PANEL_ON,		//메인씬의 종료 패널 온
};

//메인 버튼 클릭 이벤트
enum MAIN_BUTTON_EVENT {
	MAIN_BUTTON_GAMEPLAY_CLICKED = 0,	//메인씬의 게임플레이 버튼 클릭
	MAIN_BUTTON_HOWTOPLAY_CLICKED,		//메인씬의 게임방법 버튼 클릭
	MAIN_BUTTON_OPTION_CLICKED,			//메인씬의 옵션 버튼 클릭
	MAIN_BUTTON_CREADIT_CLICKED,		//메인씬의 정보 버튼 클릭
	MAIN_BUTTON_EXIT_CLICKED,			//메인씬의 종료 버튼 클릭
	MAIN_PANEL_HOWTOPLAY_OFF,		//메인씬의 게임방법 패널 오프
	MAIN_PANEL_OPTION_OFF,			//메인씬의 옵션 패널 오프
	MAIN_PANEL_CREADIT_OFF,		//메인씬의 정보 패널 오프
	MAIN_PANEL_EXIT_OFF			//메인씬의 종료 패널 오프
};

//==============================
//메인씬 패널
enum MAIN_PANEL
{
	MAIN_PANEL_HOWTOPLAY = 0,
	MAIN_PANEL_OPTION,
	MAIN_PANEL_CREADIT,
	MAIN_PANEL_EXIT
};
//메인씬 HOWTOPLAY 패널 버튼
enum MAIN_PANEL_HOWTOPLAY_BUTTON
{
	MAIN_PANEL_HOWTOPLAY_BUTTON_X = 0,
	MAIN_PANEL_HOWTOPLAY_BUTTON_BACK,
	MAIN_PANEL_HOWTOPLAY_BUTTON_NEXT,
};
//메인씬 OPTION 패널 버튼
enum MAIN_PANEL_OPTION_BUTTON
{
	MAIN_PANEL_OPTION_BUTTON_BM_LEFT = 0,
	MAIN_PANEL_OPTION_BUTTON_BM_RIGHT,
	MAIN_PANEL_OPTION_BUTTON_SE_LEFT,
	MAIN_PANEL_OPTION_BUTTON_SE_RIGHT,
	MAIN_PANEL_OPTION_BUTTON_FULLMODE,
	MAIN_PANEL_OPTION_BUTTON_WINDOWMODE,
	MAIN_PANEL_OPTION_BUTTON_BACK
};
//메인씬 OPTION 패널 텍스쳐
enum MAIN_PANEL_OPTION_TEXTURE
{
	MAIN_PANEL_OPTION_TEXTURE_BM_NUM = 0,
	MAIN_PANEL_OPTION_TEXTURE_SE_NUM,
	MAIN_PANEL_OPTION_TEXTURE_FULLMODE_CHECK,
	MAIN_PANEL_OPTION_TEXTURE_WINDOWMODE_CHECK
};

//메인씬 CREADIT 패널 버튼
enum MAIN_PANEL_CREADIT_BUTTON
{
	MAIN_PANEL_CREADIT_BUTTON_X = 0,
	MAIN_PANEL_CREADIT_BUTTON_BACK,
	MAIN_PANEL_CREADIT_BUTTON_NEXT,
};
//메인씬 EXIT 패널 버튼
enum MAIN_PANEL_EXIT_BUTTON
{
	MAIN_PANEL_EXIT_BUTTON_YES = 0,
	MAIN_PANEL_EXIT_BUTTON_NO
};
//============FSM===============
//메인씬 HOWTOPLAY패널 상태
enum MAIN_PANEL_STATE
{
	MAIN_PANEL_ON = 0,
	MAIN_PANEL_OFF,
};
enum MAIN_HOWTOPLAY_PANEL_STATE
{
	MAIN_HOWTOPLAY_PANEL_BACK = 2,
	MAIN_HOWTOPLAY_PANEL_NEXT
};
//	메인씬의 HOWTOPLAY패널 이벤트
enum MAIN_PANEL_HOWTOPLAY_EVENT
{
	MAIN_PANEL_HOWTOPLAY_X_CLICKED = 0,	//예스버튼 클릭
	MAIN_PANEL_HOWTOPLAY_BACK_CLICKED,
	MAIN_PANEL_HOWTOPLAY_NEXT_CLICKED
};
//메인씬 OPTION패널 상태
enum MAIN_OPTION_PANEL_STATE
{
	MAIN_OPTION_PANEL_BM_LEFT = 2,
	MAIN_OPTION_PANEL_BM_RIGHT,
	MAIN_OPTION_PANEL_SE_LEFT,
	MAIN_OPTION_PANEL_SE_RIGHT,
	MAIN_OPTION_PANEL_FULLMODE,
	MAIN_OPTION_PANEL_WINDOWMODE
};
//메인씬 OPTION패널 이벤트
enum MAIN_PANEL_OPTION_EVENT
{
	MAIN_PANEL_OPTION_BACK_CLICKED = 0,	//BACK버튼 클릭
	MAIN_PANEL_OPTION_BM_LEFT_CLICKED,
	MAIN_PANEL_OPTION_BM_RIGHT_CLICKED,
	MAIN_PANEL_OPTION_SE_LEFT_CLICKED,
	MAIN_PANEL_OPTION_SE_RIGHT_CLICKED,
	MAIN_PANEL_OPTION_FULLMODE_CLICKED,
	MAIN_PANEL_OPTION_WINDOWMODE_CLICKED
};
//메인씬 CREADIT패널 상태
enum MAIN_CREADIT_PANEL_STATE
{
	MAIN_CREADIT_PANEL_BACK = 2,
	MAIN_CREADIT_PANEL_NEXT
};
//	메인씬의 CREADIT패널 이벤트
enum MAIN_PANEL_CREADIT_EVENT
{
	MAIN_PANEL_CREADIT_X_CLICKED = 0,	//예스버튼 클릭
	MAIN_PANEL_CREADIT_BACK_CLICKED,
	MAIN_PANEL_CREADIT_NEXT_CLICKED
};
// 메인씬의 EXIT패널 이벤트
enum MAIN_PANEL_EXIT_EVENT
{
	MAIN_PANEL_EXIT_YES_CLICKED = 0,	//예스버튼 클릭
	MAIN_PANEL_EXIT_NO_CLICKED			//노버튼 클릭
};
//==============================

//===============================================================================
//===================================LOADING=====================================
//===============================================================================
//LOADING씬 상태
enum LOADING_STATE
{
	LOADING_STATE_LOAD = 0,		//로딩중
	LOADING_STATE_COMPLETE		//로딩완료
};
//로딩씬의 이벤트
enum LOADING_EVENT
{
	LOADING_EVENT_LOAD = 0,		//로딩 이벤트
	LOADING_EVENT_COMPLETE		//로딩완료 이벤트
};

enum LOADING_TEXTURE
{
	LOADING_TEXTURE_BAR = 0,
	LOADING_TEXTURE_WAITING,
	LOADING_TEXUTRE_COMPLETE
};
//로딩씬의 정보패널
enum LOADING_PANEL
{
	LOADING_PANEL_INFORMATION = 0
};
enum LOADING_PANEL_INFORMATION_BUTTON
{
	LOADING_PANEL_INFORMATION_BUTTON_BACK = 0,
	LOADING_PANEL_INFORMATION_BUTTON_NEXT,
};
enum LOADING_PANEL_INFORMATION_STATE
{
	LOADING_PANEL_INFORMATION_ON = 0,
	LOADING_PANEL_INFORMATION_BACK,
	LOADING_PANEL_INFORMATION_NEXT,
};
enum LOADING_PANEL_INFORMATION_EVENT
{
	LOADING_PANEL_INFORMATION_BACK_CLICKED = 0,
	LOADING_PANEL_INFORMATION_NEXT_CLICKED,
};
//===============================================================================
//===================================INGAME======================================
//===============================================================================
//INGAME씬 상태
enum INGAME_STATE
{
	INGAME_STATE_STAGE_1_FARMING = 0,			//스테이지1 파밍상태
	INGAME_STATE_STAGE_1_BATTLE,				//스테이지1 배틀상태	
	INGAME_STATE_STAGE_2_FARMING,				//스테이지2 파밍상태
	INGAME_STATE_STAGE_2_BATTLE,				//스테이지2 배틀상태
	INGAME_STATE_STAGE_3_FARMING,				//스테이지3 파밍상태
	INGMAE_STATE_STAGE_3_BATTLE,				//스테이지3 배틀상태
	INGAME_STATE_STAGE_4_FARMING,				//스테이지4 파밍상태
	INGAME_STATE_STAGE_4_BATTLE,				//스테이지4 배틀상태
	INGAME_STATE_NEEDTOHELP_PANEL_ON,	//인게임씬의 NEEDTOHELP 패널 온
	INGAME_STATE_HOWTOPLAY_PANEL_ON,	//인게임씬의 HOWTOPLAY 패널 온
	INGAME_STATE_OPTION_PANEL_ON,		//인게임씬의 OPTION 패널 온
	INGAME_STATE_LOSE_PANEL_ON,	//인게임씬의 LOSE 패널 온
	INGAME_STATE_WIN_PANEL_ON,	//인게임씬의 WIN 패널 온
	INGAME_STATE_BACKTOMAIN,		//백투메인상태
	INGAME_STATE_INVEN_PANEL_ON	//인게임씬의 INVEN패널 온
};
//INGAME씬 이벤트
enum INGAME_EVENT {
	INGAME_EVENT_ESC_CLICKED = 0,	//인게임씬의 ESC클릭 이벤트
	INGAME_EVENT_INVEN_CLICKED,
	INGAME_EVENT_FARMING_END,		//파밍시간 끝
	INGAME_EVENT_BATTLE_END,
	INGAME_EVENT_STAGE_CLEAR,		//스테이지 클리어
	INGAME_EVENT_LOSE,		//인게임씬 패배
	INGAME_EVENT_WIN,			//인게임씬 승리
	INGAME_EVENT_NEEDTOHELP_PANEL_OFF,	//인게임씬의 NEEDTOHLEP 패널 오프
	INGAME_EVENT_BACKTOMAIN,
	INGAME_EVENT_INVEN_PANEL_OFF,	//인게임씬의 INVEN 패널 오프
};
//인게임씬의 텍스쳐
enum INGAME_TEXTURE
{
	INGAME_TEXTURE_STAGE = 0,	//스테이지관련
	INGAME_TEXTURE_PHASE,
	INGAME_TEXTURE_TIME_POINT,	//숫자관련
	INGAME_TEXTURE_TIME_1,
	INGAME_TEXTURE_TIME_2,
	INGAME_TEXTURE_TIME_3,
	INGAME_TEXTURE_TIME_4,
	INGAME_TEXTURE_AIM_CROSS,	//에임관련
	INGAME_TEXTURE_HPBAR_BACK,	//체력관련
	INGAME_TEXTURE_HPBAR_FRONT,
	INGAME_TEXTURE_HPTEXT,
	INGAME_TEXTURE_HPSLASH,
	INGAME_TEXTURE_HPNUMBER_1,
	INGAME_TEXTURE_HPNUMBER_2,
	INGAME_TEXTURE_HPNUMBER_3,
	INGAME_TEXTURE_HPNUMBER_4,
	INGAME_TEXTURE_HPNUMBER_5,
	INGAME_TEXTURE_HPNUMBER_6,
	INGAME_TEXTURE_HPNUMBER_7,
	INGAME_TEXTURE_HPNUMBER_8,
	INGAME_TEXTURE_RIPLETEXT,
	INGAME_TEXTURE_RIPLESLASH,
	INGAME_TEXTURE_RIPLENUMBER_1,
	INGAME_TEXTURE_RIPLENUMBER_2,
	INGAME_TEXTURE_RIPLENUMBER_3,
	INGAME_TEXTURE_RIPLENUMBER_4,
	INGAME_TEXTURE_RIPLENUMBER_5,
	INGAME_TEXTURE_RIPLENUMBER_6,
	INGAME_TEXTURE_HANDGUNTEXT,
	INGAME_TEXTURE_HANDGUNSLASH,
	INGAME_TEXTURE_HANDGUNNUMBER_1,
	INGAME_TEXTURE_HANDGUNNUMBER_2,
	INGAME_TEXTURE_HANDGUNNUMBER_3,
	INGAME_TEXTURE_HANDGUNNUMBER_4,
	INGAME_TEXTURE_HANDGUNNUMBER_5,
	INGAME_TEXTURE_HANDGUNNUMBER_6,
	INGAME_TEXTURE_KNIFETEXT,
	INGAME_TEXTURE_KNIFESLASH,
	INGAME_TEXTURE_KNIFENUMBER_1,
	INGAME_TEXTURE_KNIFENUMBER_2,
	INGAME_TEXTURE_BOMBTEXT,
	INGAME_TEXTURE_BOMBSLASH,
	INGAME_TEXTURE_BOMBNUMBER_1,
	INGAME_TEXTURE_BOMBNUMBER_2,
	INGAME_TEXTURE_MEDICTEXT,
	INGAME_TEXTURE_MEDICSLASH,
	INGAME_TEXTURE_MEDICNUMBER_1,
	INGAME_TEXTURE_MEDICNUMBER_2,
	INGAME_TEXTURE_RIPLE_RELOAD,
	INGAME_TEXTURE_HANDGUN_RELOAD,
	INGAME_TEXTURE_BOMB_RELOAD,
	INGAME_TEXTURE_MEDIC_RELOAD,
	INGAME_TEXTURE_PICK_1,
	INGAME_TEXTURE_PICK_2
};
//인게임씬의 텍스쳐 상태
enum INGAME_TEXTURE_STAGE_STATE
{
	INGAME_TEXTURE_STAGE_1 = 0,
	INGAME_TEXTURE_STAGE_2,
	INGAME_TEXTURE_STAGE_3,
	INGAME_TEXTURE_STAGE_4,
	INGAME_TEXTURE_STAGE_5
};
enum INGAME_TEXTURE_PHASE_STATE
{
	INGAME_TEXTURE_PHASE_FARMING = 0,
	INGAME_TEXTURE_PHASE_BATTLE
};

enum INGAME_TEXTURE_TIME_STATE
{
	INGAME_TEXTURE_TIME_1_STATE_0 = 0,
	INGAME_TEXTURE_TIME_1_STATE_1,
	INGAME_TEXTURE_TIME_1_STATE_2,
	INGAME_TEXTURE_TIME_1_STATE_3,
	INGAME_TEXTURE_TIME_1_STATE_4,
	INGAME_TEXTURE_TIME_1_STATE_5,
	INGAME_TEXTURE_TIME_1_STATE_6,
	INGAME_TEXTURE_TIME_1_STATE_7,
	INGAME_TEXTURE_TIME_1_STATE_8,
	INGAME_TEXTURE_TIME_1_STATE_9
};

//==============================
//인게임씬 패널
enum INGAME_PANEL
{
	INGAME_PANEL_NEEDTOHELP = 0,
	INGAME_PANEL_HOWTOPLAY,
	INGAME_PANEL_OPTION,
	INGAME_PANEL_INVEN,
	INGAME_PANEL_LOSE,
	INGAME_PANEL_WIN,
};
//인게임씬 NEEDTOHELP 패널 버튼
enum INGAME_PANEL_NEEDTOHELP_BUTTON
{
	INGAME_PANEL_NEEDTOHELP_BUTTON_HOWTOPLAY = 0,
	INGAME_PANEL_NEEDTOHELP_BUTTON_OPTION,
	INGAME_PANEL_NEEDTOHELP_GOTOMAIN,
	INGAME_PANEL_NEEDTOHELP_GOBACKGAME,
};
//인게임씬 HOWTOPLAY 패널 버튼
enum INGAME_PANEL_HOWTOPLAY_BUTTON
{
	INGAME_PANEL_HOWTOPLAY_BUTTON_X = 0,
	INGAME_PANEL_HOWTOPLAY_BUTTON_BACK,
	INGAME_PANEL_HOWTOPLAY_BUTTON_NEXT,
};
//인게임씬의 OPTION 패널 버튼
enum INGAME_PANEL_OPTION_BUTTON
{
	INGAME_PANEL_OPTION_BUTTON_BM_LEFT = 0,
	INGAME_PANEL_OPTION_BUTTON_BM_RIGHT,
	INGAME_PANEL_OPTION_BUTTON_SE_LEFT,
	INGAME_PANEL_OPTION_BUTTON_SE_RIGHT,
	INGAME_PANEL_OPTION_BUTTON_FULLMODE,
	INGAME_PANEL_OPTION_BUTTON_WINDOWMODE,
	INGAME_PANEL_OPTION_BUTTON_BACK
};
//인게임씬 OPTION 패널 텍스쳐
enum INGAME_PANEL_OPTION_TEXTURE
{
	INGAME_PANEL_OPTION_TEXTURE_BM_NUM = 0,
	INGAME_PANEL_OPTION_TEXTURE_SE_NUM,
	INGAME_PANEL_OPTION_TEXTURE_FULLMODE_CHECK,
	INGAME_PANEL_OPTION_TEXTURE_WINDOWMODE_CHECK
};
//인게임씬의 INVEN 패널 버튼
enum INGAME_PANEL_INVEN_BUTTON
{
	INGAME_PANEL_INVEN_BUTTON_X = 0,
	INGAME_PANEL_INVEN_BUTTON_WEAPON_1,
	INGAME_PANEL_INVEN_BUTTON_WEAPON_2,
	INGAME_PANEL_INVEN_BUTTON_WEAPON_3,
	INGAME_PANEL_INVEN_BUTTON_WEAPON_4,
	INGAME_PANEL_INVEN_BUTTON_WEAPON_5,
	INGAME_PANEL_INVEN_BUTTON_WEAPON_6,
	INGAME_PANEL_INVEN_BUTTON_WEAPON_7,
	INGAME_PANEL_INVEN_BUTTON_WEAPON_8,
	INGAME_PANEL_INVEN_BUTTON_WEAPON_9,
	INGAME_PANEL_INVEN_BUTTON_WEAPON_10,
	INGAME_PANEL_INVEN_BUTTON_ARMOR_1,
	INGAME_PANEL_INVEN_BUTTON_ARMOR_2,
	INGAME_PANEL_INVEN_BUTTON_ARMOR_3,
	INGAME_PANEL_INVEN_BUTTON_ARMOR_4,
	INGAME_PANEL_INVEN_BUTTON_ARMOR_5,
	INGAME_PANEL_INVEN_BUTTON_ARMOR_6,
	INGAME_PANEL_INVEN_BUTTON_ARMOR_7,
	INGAME_PANEL_INVEN_BUTTON_ARMOR_8,
	INGAME_PANEL_INVEN_BUTTON_ARMOR_9,
	INGAME_PANEL_INVEN_BUTTON_ARMOR_10,
};
//인게임씬 INVEN 패널 텍스쳐
enum INGAME_PANEL_INVEN_TEXTURE
{
	//첫 2개 제외
	INGAME_PANEL_INVEN_TEXTURE_HP_1 = 2,
	INGAME_PANEL_INVEN_TEXTURE_HP_2,
	INGAME_PANEL_INVEN_TEXTURE_HP_3,
	INGAME_PANEL_INVEN_TEXTURE_HP_4,
	INGAME_PANEL_INVEN_TEXTURE_ARMOR_1,
	INGAME_PANEL_INVEN_TEXTURE_ARMOR_2,
	INGAME_PANEL_INVEN_TEXTURE_ARMOR_3,
	INGAME_PANEL_INVEN_TEXTURE_MOVE_1,
	INGAME_PANEL_INVEN_TEXTURE_MOVE_2,
	INGAME_PANEL_INVEN_TEXTURE_MOVE_3,
	INGAME_PANEL_INVEN_TEXTURE_HP_PLUS,
	INGAME_PANEL_INVEN_TEXTURE_HP_PLUS_1,
	INGAME_PANEL_INVEN_TEXTURE_HP_PLUS_2,
	INGAME_PANEL_INVEN_TEXTURE_HP_PLUS_3,
	INGAME_PANEL_INVEN_TEXTURE_ARMOR_PLUS,
	INGAME_PANEL_INVEN_TEXTURE_ARMOR_PLUS_1,
	INGAME_PANEL_INVEN_TEXTURE_ARMOR_PLUS_2,
	INGAME_PANEL_INVEN_TEXTURE_ARMOR_PLUS_3,
	INGAME_PANEL_INVEN_TEXTURE_MOVE_PLUS,
	INGAME_PANEL_INVEN_TEXTURE_MOVE_PLUS_1,
	INGAME_PANEL_INVEN_TEXTURE_MOVE_PLUS_2,
	INGAME_PANEL_INVEN_TEXTURE_MOVE_PLUS_3,
	INGAME_PANEL_INVEN_TEXTURE_MAINRIPLE_T,
	INGAME_PANEL_INVEN_TEXTURE_MAINRIPLE_1,
	INGAME_PANEL_INVEN_TEXTURE_MAINRIPLE_2,
	INGAME_PANEL_INVEN_TEXTURE_MAINRIPLE_3,
	INGAME_PANEL_INVEN_TEXTURE_MAINRIPLE_SHOOT,
	INGAME_PANEL_INVEN_TEXTURE_MAINBOMB_T,
	INGAME_PANEL_INVEN_TEXTURE_MAINBOMB_1,
	INGAME_PANEL_INVEN_TEXTURE_MAINBOMB_2,
	INGAME_PANEL_INVEN_TEXTURE_MAINBOMB_3,
	INGAME_PANEL_INVEN_TEXTURE_MAINBOMB_SHOOT,
	INGAME_PANEL_INVEN_TEXTURE_MAINMEDIC_T,
	INGAME_PANEL_INVEN_TEXTURE_MAINMEDIC_1,
	INGAME_PANEL_INVEN_TEXTURE_MAINMEDIC_2,
	INGAME_PANEL_INVEN_TEXTURE_MAINMEDIC_3,
	INGAME_PANEL_INVEN_TEXTURE_MAINMEDIC_SHOOT,
	INGAME_PANEL_INVEN_TEXTURE_MAINHAT,
	INGAME_PANEL_INVEN_TEXTURE_MAINBODY,
	INGAME_PANEL_INVEN_TEXTURE_CHOOSE_WEAPON_T1,
	INGAME_PANEL_INVEN_TEXTURE_CHOOSE_WEAPON_T2,
	INGAME_PANEL_INVEN_TEXTURE_CHOOSE_WEAPON_T3,
	INGAME_PANEL_INVEN_TEXTURE_CHOOSE_WEAPON_1,
	INGAME_PANEL_INVEN_TEXTURE_CHOOSE_WEAPON_2,
	INGAME_PANEL_INVEN_TEXTURE_CHOOSE_WEAPON_3,
	INGAME_PANEL_INVEN_TEXTURE_CHOOSE_WEAPON_SHOOT,
	INGAME_PANEL_INVEN_TEXTURE_CHOOSE_ARMOR = 111,
	INGAME_PANEL_INVEN_TEXTURE_INFORMATION = 121,
};
//인게임씬 LOSE 패널 버튼
enum INGAME_PANEL_LOSE_BUTTON
{
	INGAME_PANEL_LOSE_BUTTON_GOTOMAIN = 0
};
//인게임씬 WIN 패널 버튼
enum INGAME_PANEL_WIN_BUTTON
{
	INGAME_PANEL_WIN_BUTTON_GOTOMAIN = 0
};
//============FSM===============
//인게임씬의 패널 상태
enum INGAME_PANEL_STATE
{
	INGAME_PANEL_ON = 0,
	INGAME_PANEL_OFF,
	INGAME_PANEL_GOTOMAIN
};
enum INGAME_PANEL_NEEDTOHELP_STATE
{
	INGAME_PANEL_NEEDTOHELP_HOWTOPLAY_ON = 3,
	INGAME_PANEL_NEEDTOHELP_OPTION_ON,
};
enum INGAME_PANEL_NEEDTOHELP_EVENT
{
	INGAME_PANEL_HOWTOPLAY_CLICKED = 0,
	INGAME_PANEL_OPTION_CLICKED,
	INGAME_PANEL_NEEDTOHELP_GOTOMAIN_CLICKED,	//고투메인버튼 클릭
	INGAME_PANEL_NEEDTOHELP_GOBACKGAME_CLICKED			//고백게임버튼클릭
};
enum INGAME_HOWTOPLAY_PANEL_STATE
{
	INGAME_HOWTOPLAY_PANEL_BACK = 3,
	INGAME_HOWTOPLAY_PANEL_NEXT
};
enum INGAME_PANEL_HOWTOPLAY_EVENT
{
	INGAME_PANEL_HOWTOPLAY_X_CLICKED = 0,
	INGAME_PANEL_HOWTOPLAY_BACK_CLICKED,
	INGAME_PANEL_HOWTOPLAY_NEXT_CLICKED
};
enum INGAME_OPTION_PANEL_STATE
{
	INGAME_OPTION_PANEL_BM_LEFT = 3,
	INGAME_OPTION_PANEL_BM_RIGHT,
	INGAME_OPTION_PANEL_SE_LEFT,
	INGAME_OPTION_PANEL_SE_RIGHT,
	INGAME_OPTION_PANEL_FULLMODE,
	INGAME_OPTION_PANEL_WINDOWMODE
};
enum INGAME_PANEL_OPTION_EVENT
{
	INGAME_PANEL_OPTION_BACK_CLICKED = 0,
	INGAME_PANEL_OPTION_BM_LEFT_CLICKED,
	INGAME_PANEL_OPTION_BM_RIGHT_CLICKED,
	INGAME_PANEL_OPTION_SE_LEFT_CLICKED,
	INGAME_PANEL_OPTION_SE_RIGHT_CLICKED,
	INGAME_PANEL_OPTION_FULLMODE_CLICKED,
	INGAME_PANEL_OPTION_WINDOWMODE_CLICKED
};
enum INGAME_PANEL_INVEN_STATE
{

};
enum INGAME_PANEL_INVEN_EVENT
{
	INGAME_PANEL_INVEN_X_CLICKED = 0,
};
enum INGAME_PANEL_WIN_EVENT
{
	INGAME_PANEL_WIN_GOTOMAIN_CLICKED = 0,	//고투메인버튼 클릭
};

enum INGAME_PANEL_LOSE_EVENT
{
	INGAME_PANEL_LOSE_GOTOMAIN_CLICKED = 0	//고투메인버튼 클릭
};
//===============================================================================
//=====================================FSM=======================================
//===============================================================================
//버튼 FSM
enum BUTTON_STATE {
	BUTTON_FREE = 0,	//마우스가 버튼 위에 올라가지 않았을때
	BUTTON_UP,			//마우스가 버튼 위로 올라갔을때
	BUTTON_CLICKED		//버튼이 마우스에 의해서 클릭되었을때
};

enum BUTTON_EVENT {
	BUTTON_MOUSE_DOWN = 0,	//버튼에 마우스가 올라가지 않았을때
	BUTTON_MOUSE_UP,		//버튼에 마우스가 올라갔을때
	BUTTON_MOUSE_CLICKED	//버튼을 마우스로 클릭했을때
};
//===============================================================================
//=====================================ETC=======================================
//===============================================================================
//씬 or 패널
enum KPS_TYPE {
	K_SCENE = 0,
	K_PANEL
};

//UI TYPE
enum KUI_TYPE {
	K_BUTTON = 0,
	K_IMAGE,
	K_EDIT,
	K_TEXTURE
};

enum BUTTON
{
	START = 0,
	PANEL,
	END
};
enum INGAME_AIM_TEXTURE
{
	AIM_TEXTURE_1 = 0,
	AIM_TEXTURE_2,
	AIM_TEXTURE_3,
	AIM_TEXTURE_4,
	AIM_TEXTURE_5,
	AIM_TEXTURE_6,
	AIM_TEXTURE_7
};
//무기 아이콘 NUMBER
enum ICON_ITEM_WEAPON1
{
	WEAPON1_AK47 = 0,
	WEAPON1_HK416,
	WEAPON1_K2
};
enum ICON_ITEM_WEAPON4
{
	WEAPON4_FRAG = 0,
	WEAPON4_PORTABLE,
};
enum ICON_ITEM_WEAPON5
{
	WEAPON5_DEDONGGANG = 0
};

enum ICON_ITEM_ARMOR
{
	ARMOR_HAT = 0,
	ARMOR_BODY,
};

enum INVEN_ITEM_IMFORMATION
{
	IMFO_AK47 = 0,
	IMFO_HK416,
	IMFO_K2,
	IMFO_FLAG,
	IMFO_PORTABLE,
	IMFO_DEDONGGANG,
	IMFO_HAT,
	IMFO_BODY
};
//===============================================================================
//=====================================SOUND=====================================
//===============================================================================
enum UI_SOUND_EFFECT
{
	UI_SOUND_TITLE = 0,
	UI_SOUND_LOADING,
	UI_SOUND_PHASE,
	UI_SOUND_INGAME_FARMING,
	UI_SOUND_INGAME_FARMING_2,
	UI_SOUND_INGAME_FARMING_3,
	UI_SOUND_INGAME_BATTLE,
	UI_SOUND_INGAME_BATTLE_2,
	UI_SOUND_INGAME_BATTLE_3,
	UI_SOUND_INGAME_SNOW,
	UI_SOUND_INGAME_WIN,
	UI_SOUND_INGAME_LOSE,
	UI_SOUND_ICON_CLICK,
	UI_SOUND_ICON_NEAR,
	UI_SOUND_INGAME_BOMB,
};

//===============================================================================
//===================================MONSTER=====================================
//===============================================================================

enum MONSTER_ZOMBIE_STATE	//몬스터 상태
{
	MONSTER_ZOMBIE_STATE_IDLE = 0,		//평시 상태(몬스터 스폰시 상태)
	MONSTER_ZOMBIE_STATE_MOVE,			//움직이는 상태
	MONSTER_ZOMBIE_STATE_SLIP,			//미끌림 상태
	MONSTER_ZOMBIE_STATE_DASH,			//대쉬 상태
	MONSTER_ZOMBIE_STATE_ATTACK,		//공격 상태
	MONSTER_ZOMBIE_STATE_DEAD			//죽음
};
enum MONSTER_GUNNER_STATE
{
	MONSTER_GUNNER_STATE_IDLE = 0,		//평시 상태(몬스터 스폰시 상태)
	MONSTER_GUNNER_STATE_MOVE,			//움직이는 상태
	MONSTER_GUNNER_STATE_SLIP,			//미끌림 상태
	MONSTER_GUNNER_STATE_ATTACK,		//공격 상태
	MONSTER_GUNNER_STATE_DEAD			//죽음
};

enum MONSTER_EVENT	//몬스터 이벤트
{
	MONSTER_EVENT_PATROL = 0,				//게이머를 추격(발견하기위해 점점 다가오는 이벤트)
	MONSTER_EVENT_COLLISOIONTOOBJECT,		//오브젝트와 충돌
	MONSTER_EVENT_FINDTARGET,				//게이머를 발견
	MONSTER_EVENT_LOSTTARGET,				//게이머를 소실(게이머 회피시)
	MONSTER_EVENT_ATTACK,					//공격
	MONSTER_EVENT_DEAD,						//죽음
};